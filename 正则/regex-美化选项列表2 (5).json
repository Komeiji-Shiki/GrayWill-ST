{
    "id": "bfccf681-202c-4a20-90d0-8ad83c551efc",
    "scriptName": "美化选项列表2",
    "findRegex": "/<small>\\s*([^<]+?)\\s*[:：]((?:.|\\n)*?)(?:Tips\\s*[:：]\\s*([^<]+?))?\\s*<\\/small>/si",
    "replaceString": "```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\" />\n<style>\n@keyframes fade-out-nova { from { opacity: 1; transform: scale(1); } to { opacity: 0; transform: scale(0.96); } }\n.nova-container.fading-out { animation: fade-out-nova 0.26s ease-out forwards; }\n\n:root{\n  --bg-deep: linear-gradient(180deg, #090e16 0%, #0a1220 100%);\n  --bg-elev: linear-gradient(180deg, rgba(16,28,48,0.28), rgba(9,16,30,0.35));\n  --line-weak: #162339;\n  --line-strong: #223650;\n  --text-main: #d9e5ff;\n  --text-dim: #8fa0bf;\n  --btn-bg: #0e1a2d;\n  --btn-hover: #15263f;\n  --btn-active: #132745;\n  --btn-active-glow: rgba(42,168,255,0.14);\n  --btn-border-active: #254569;\n  --btn-border: #223650;\n  --accent: #2aa8ff;\n  --accent-soft: rgba(42,168,255,0.35);\n  --accent-faint: rgba(42,168,255,0.12);\n  --notch: 10px;\n}\n\n/* 容器 */\n.nova-silent-sky{\n  display:flex; justify-content:center; width:100%;\n  padding: 0 12px; margin: 12px auto;\n  font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n}\n\n/* 卡片 */\n.mystic-card-silent{\n  width: min(980px, 96vw);\n  background: var(--bg-deep);\n  color: var(--text-main);\n  border: 1px solid var(--line-weak);\n  box-shadow: 0 14px 38px rgba(0,0,0,0.55), inset 0 0 0 1px rgba(255,255,255,0.03);\n  position: relative; overflow: hidden;\n  clip-path: polygon(\n    0 var(--notch), var(--notch) 0,\n    calc(100% - var(--notch)) 0, 100% var(--notch),\n    100% calc(100% - var(--notch)), calc(100% - var(--notch)) 100%,\n    var(--notch) 100%, 0 calc(100% - var(--notch))\n  );\n}\n.mystic-card-silent::before{\n  content:\"\"; position:absolute; inset:0; pointer-events:none;\n  box-shadow: inset 0 0 0 1px rgba(42,168,255,0.06);\n  clip-path: inherit;\n}\n/* 顶部柔光 + 轻微呼吸动效（常驻） */\n.mystic-card-silent::after{\n  content:\"\"; position:absolute; inset:-1px -1px 60% -1px;\n  background: radial-gradient(80% 50% at 25% 0%, rgba(255,255,255,0.04), rgba(255,255,255,0));\n  pointer-events:none;\n  animation: cardGlow 12s ease-in-out infinite;\n}\n@keyframes cardGlow{\n  0%,100%{ opacity: .25; }\n  50%{ opacity: .38; }\n}\n\n.mystic-card-silent summary {\n  list-style: none; cursor: pointer; outline: none;\n  background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0));\n  border-bottom: 1px solid rgba(255,255,255,0.04);\n}\n.mystic-card-silent summary::-webkit-details-marker { display: none; }\n\n.card-content-wrapper {\n  padding: 0 14px 16px; /* 减少底部留白，确认按钮已并入 Tips */\n  position: relative;\n}\n\n.toggle-text {\n  font-size: 11px; color: var(--text-dim); opacity: 0.7;\n  transition: color .2s ease, opacity .2s ease; margin-left: auto; padding-left: 16px;\n}\n.mystic-card-silent[open] > summary .toggle-text { color: var(--accent); opacity: 1; }\n.mystic-card-silent > summary:hover .toggle-text { color: var(--text-main); opacity: 0.9; }\n\n.card-header{\n  display:flex; align-items:center; justify-content:space-between;\n  padding: 14px;\n}\n.card-header-main { display: flex; flex-direction: column; }\n.card-title{ font-size: 13px; font-weight: 600; letter-spacing: 0.3px; }\n.card-subtle{ font-size: 11px; color: var(--text-dim); opacity: 0.85; margin-top: 2px; }\n\n.button-group-silent{\n  display:grid; grid-template-columns: 1fr; gap: 10px;\n  padding-top: 10px;\n  border-top: 1px dashed rgba(255,255,255,0.06);\n}\n@media (min-width: 880px){\n  .button-group-silent{ grid-template-columns: 1fr 1fr; }\n}\n\n/* 选项按钮 */\n.action-btn-silent{\n  position: relative;\n  text-align:left; width:100%;\n  padding: 12px 34px 12px 14px; /* 右侧留空间给方块标记 */\n  font-size: 12.5px; font-weight: 500; cursor:pointer;\n  background: var(--btn-bg); color: var(--text-main);\n  border: 1px solid var(--btn-border);\n  transition: background-color .15s ease, border-color .15s ease, transform .15s ease, box-shadow .18s ease;\n  clip-path: polygon(\n    0 var(--notch), var(--notch) 0,\n    calc(100% - var(--notch)) 0, 100% var(--notch),\n    100% calc(100% - var(--notch)), calc(100% - var(--notch)) 100%,\n    var(--notch) 100%, 0 calc(100% - var(--notch))\n  );\n  box-shadow: 0 6px 16px rgba(0,0,0,0.28), inset 0 0 0 1px rgba(255,255,255,0.03);\n}\n/* 常驻轻微流光（克制） */\n.action-btn-silent::before{\n  content:\"\"; position:absolute; inset:0;\n  background: linear-gradient(120deg, rgba(255,255,255,0), rgba(255,255,255,0.05), rgba(255,255,255,0));\n  background-size: 200% 100%;\n  opacity: .06; pointer-events: none; mix-blend-mode: overlay;\n  animation: sheen 9s linear infinite;\n}\n@keyframes sheen { 0%{ background-position: 0% 0; } 100%{ background-position: 200% 0; } }\n\n.action-btn-silent:hover{\n  background: var(--btn-hover);\n  border-color: var(--line-strong);\n  transform: translateY(-1px);\n}\n.action-btn-silent:active{\n  background: var(--btn-active);\n  transform: translateY(0);\n}\n.action-btn-silent:focus-visible{\n  outline: none;\n  box-shadow: 0 0 0 1px var(--accent-soft), 0 8px 18px rgba(0,0,0,0.32);\n}\n\n/* 选中态：更暗、柔和微动效 + 实心方块标记（右侧中部） */\n@keyframes nova-select-soft {\n  0% { box-shadow: inset 0 0 0 0 rgba(42,168,255,0), 0 6px 16px rgba(0,0,0,0.28); transform: translateY(0); }\n  60% { box-shadow: inset 0 0 18px var(--btn-active-glow), 0 6px 16px rgba(0,0,0,0.28); }\n  100% { box-shadow: inset 0 0 10px var(--btn-active-glow), 0 6px 16px rgba(0,0,0,0.28); }\n}\n.action-btn-silent.active {\n  background: linear-gradient(180deg, #162d4a 0%, #132745 100%);\n  border-color: var(--btn-border-active);\n  transform: translateY(0);\n  animation: nova-select-soft .18s ease-out both;\n}\n/* 实心方块标记 */\n.action-btn-silent.active::after{\n  content: \"\";\n  position: absolute;\n  right: 12px; top: 50%;\n  width: 10px; height: 10px; transform: translateY(-50%);\n  border-radius: 2px;\n  background: var(--accent);\n  box-shadow: 0 0 0 2px rgba(42,168,255,0.16), 0 0 10px rgba(42,168,255,0.22);\n  opacity: 0.95;\n}\n\n/* Tips + 确认 一体化底栏 */\n.tips-panel{\n  position: sticky; bottom: 0; z-index: 2;\n  display: grid; grid-template-columns: 1fr auto; align-items: center; gap: 12px;\n  margin-top: 12px; padding: 12px 14px;\n  background: linear-gradient(180deg, rgba(12,22,40,0.72), rgba(9,16,30,0.86));\n  border: 1px solid var(--line-weak);\n  box-shadow: inset 0 0 0 1px rgba(255,255,255,0.03), 0 -6px 20px rgba(0,0,0,0.28);\n  clip-path: polygon(\n    0 var(--notch), var(--notch) 0,\n    calc(100% - var(--notch)) 0, 100% var(--notch),\n    100% calc(100% - var(--notch)), calc(100% - var(--notch)) 100%,\n    var(--notch) 100%, 0 calc(100% - var(--notch))\n  );\n  backdrop-filter: blur(6px);\n  position: sticky;\n}\n/* 顶部轻亮流动线（常驻但很轻） */\n.tips-panel{ position: relative; }\n.tips-panel::before{\n  content: \"\"; position: absolute; left: 10px; right: 10px; top: -1px; height: 1px;\n  background: linear-gradient(90deg, transparent, rgba(42,168,255,0.55), transparent);\n  background-size: 200% 100%;\n  animation: aurora-run 7.8s linear infinite;\n  opacity: .55; pointer-events:none;\n}\n@keyframes aurora-run { 0%{ background-position: 0% 0; } 100%{ background-position: 200% 0; } }\n\n.tips-title{\n  font-size: 10.5px; color: rgba(42,168,255,0.8);\n  letter-spacing: 0.45px; margin-bottom: 4px; text-transform: uppercase;\n}\n.tips-content{ font-size: 12px; color: var(--text-dim); line-height: 1.6; }\n\n/* 确认按钮（已去掉飞机图标），与 Tips 同栏 */\n.confirm-btn{\n  display:inline-flex; align-items:center; justify-content:center; gap:8px;\n  padding: 10px 14px; font-size: 12.5px; font-weight: 600; letter-spacing: 0.2px;\n  background: linear-gradient(180deg, #10233c, #0d1e34);\n  color: var(--text-main);\n  border: 1px solid var(--btn-border);\n  border-color: var(--accent-soft);\n  cursor: pointer; min-width: 112px;\n  clip-path: polygon(\n    0 var(--notch), var(--notch) 0,\n    calc(100% - var(--notch)) 0, 100% var(--notch),\n    100% calc(100% - var(--notch)), calc(100% - var(--notch)) 100%,\n    var(--notch) 100%, 0 calc(100% - var(--notch))\n  );\n  box-shadow: 0 8px 22px rgba(0,0,0,0.35), inset 0 0 0 1px rgba(255,255,255,0.03);\n  transition: transform .15s ease, background-color .2s ease, border-color .2s ease, box-shadow .2s ease, opacity .2s ease;\n}\n.confirm-btn:hover{\n  transform: translateY(-1px);\n  border-color: rgba(42,168,255,0.55);\n  background: linear-gradient(180deg, #132a44, #10233c);\n  box-shadow: 0 10px 26px rgba(0,0,0,0.42), 0 0 0 1px rgba(42,168,255,0.08) inset;\n}\n.confirm-btn:active{\n  transform: translateY(0);\n  background: linear-gradient(180deg, #0f2036, #0c1b2f);\n}\n.confirm-btn:disabled{\n  opacity: 0.5; cursor: not-allowed;\n  transform: none; box-shadow: 0 6px 18px rgba(0,0,0,0.25), inset 0 0 0 1px rgba(255,255,255,0.02);\n}\n\n/* 兼容保留（不再使用的底部确认栏） */\n.confirm-bar{ display: none !important; }\n\n/* 可选：降低动效（无障碍） */\n@media (prefers-reduced-motion: reduce){\n  * { animation-duration: 0.01ms !important; animation-iteration-count: 1 !important; transition-duration: 0.01ms !important; }\n}\n\n/* 桌面端真·环绕模式：按钮浮动到文字右侧，面板改为常规块元素 */\n.tips-panel.wrap-mode{\n  position: static;\n  display: block;                 /* 关闭 grid，启用 float */\n}\n.tips-panel.wrap-mode .confirm-btn{\n  float: right;\n  margin: 6px 0 0 14px;           /* 文字与按钮间距 */\n}\n.tips-panel.wrap-mode::after{\n  content: \"\";\n  display: block;\n  clear: both;                    /* 清除浮动，撑开容器高度 */\n}\n\n/* 移动端仍保持原先吸底 + 居中 */\n@media (max-width: 879px){\n  .tips-panel{\n    display: grid;\n    grid-template-columns: 1fr;\n  }\n  .tips-panel .confirm-btn{\n    justify-self: center;\n  }\n}\n</style>\n</head>\n<body>\n<div class=\"nova-silent-sky nova-container nova-needs-init\">\n  <details class=\"mystic-card-silent\" open>\n    <summary class=\"card-header\">\n      <div class=\"card-header-main\">\n        <div class=\"card-title\">$1</div>\n        <div class=\"card-subtle\">GrayWill · Decision</div>\n      </div>\n      <div class=\"toggle-text\">收起</div>\n    </summary>\n    <div class=\"card-content-wrapper\">\n      <div class=\"button-group-silent\"></div>\n\n      <!-- Tips 与 确认按钮将被融合在这个区域 -->\n      <div class=\"tips-panel\" style=\"display: none;\">\n        <div>\n          <div class=\"tips-title\">TIPS</div>\n          <div class=\"tips-content\">$3</div>\n        </div>\n        <button class=\"confirm-btn\" type=\"button\" disabled>确认发送</button>\n      </div>\n\n      <!-- 旧的确认栏保留占位但不再显示（JS会移除） -->\n      <div class=\"confirm-bar\" aria-label=\"确认操作区域\" style=\"display:none;\">\n        <button class=\"confirm-btn\" type=\"button\" disabled>确认发送</button>\n      </div>\n    </div>\n    <div class=\"nova-options-data\" style=\"display:none;\">$2</div>\n  </details>\n</div>\n\n<script>\n(function() {\n  if (typeof window.initializeNovaOptions === 'undefined') {\n    window.initializeNovaOptions = function() {\n      const containersToProcess = document.querySelectorAll('.nova-container.nova-needs-init');\n\n      containersToProcess.forEach(container => {\n        const detailsElement = container.querySelector('.mystic-card-silent');\n        const buttonGroup = container.querySelector('.button-group-silent');\n        let tipsPanel = container.querySelector('.tips-panel');\n        let tipsContent = container.querySelector('.tips-content');\n        const toggleText = container.querySelector('.toggle-text');\n\n        // 移除旧的确认栏（融合到 Tips 内）\n        const legacyConfirmBar = container.querySelector('.confirm-bar');\n        if (legacyConfirmBar) legacyConfirmBar.remove();\n\n        // 1) 折叠文本切换\n        if (detailsElement && toggleText) {\n          detailsElement.addEventListener('toggle', () => {\n            toggleText.textContent = detailsElement.open ? '收起' : '展开';\n          });\n        }\n\n        // Helper：获取父页 textarea\n        const getInputEl = () => {\n          try {\n            return window.parent?.document?.querySelector('#send_textarea') || document.querySelector('#send_textarea');\n          } catch (e) { return null; }\n        };\n\n        // Helper：获取当前选中文本数组\n        const getSelectedTexts = (currentButtonGroup) => {\n          const activeButtons = currentButtonGroup.querySelectorAll('.action-btn-silent.active');\n          return Array.from(activeButtons).map(btn => btn.getAttribute('data-action') || '').filter(Boolean);\n        };\n\n        // Helper：获取当前消息（优先读取输入框）\n        const getCurrentMessage = (currentButtonGroup) => {\n          const input = getInputEl();\n          const fromInput = input?.value ?? '';\n          if (fromInput && fromInput.trim()) return fromInput;\n          const selectedTexts = getSelectedTexts(currentButtonGroup);\n          return selectedTexts.join(' ').trim();\n        };\n\n        // 发送消息 (包含 |/trigger 修复)\n        const sendMessage = (currentButtonGroup) => {\n          const message = getCurrentMessage(currentButtonGroup);\n          if (!message) return;\n\n          try {\n            const runSlash = (typeof window.triggerSlash === 'function')\n              ? window.triggerSlash\n              : (typeof window.parent?.triggerSlash === 'function' ? window.parent.triggerSlash : null);\n\n            if (runSlash) {\n              runSlash(`/send ${message}|/trigger`);\n            } else {\n              // 回退方案\n              const input = getInputEl();\n              if (input) {\n                input.value = message;\n                input.dispatchEvent(new Event('input', { bubbles: true }));\n                const evt = new KeyboardEvent('keydown', { key: 'Enter', code: 'Enter', keyCode: 13, which: 13, bubbles: true });\n                input.dispatchEvent(evt);\n              } else {\n                console.warn('未找到 triggerSlash 或 #send_textarea，无法自动发送。');\n              }\n            }\n\n            // 体验优化：发送后淡出UI\n            const mainContainer = currentButtonGroup.closest('.nova-container');\n            if (mainContainer) {\n              mainContainer.classList.add('fading-out');\n              setTimeout(() => { mainContainer.style.display = 'none'; }, 260);\n            }\n\n          } catch (e) {\n            console.error('发送消息时出错:', e);\n          }\n        };\n\n        // 如果没有 tips-panel，构造一个（保证按钮有容器可用）\n        if (!tipsPanel) {\n          tipsPanel = document.createElement('div');\n          tipsPanel.className = 'tips-panel';\n          tipsPanel.innerHTML = `\n            <div>\n              <div class=\"tips-title\">TIPS</div>\n              <div class=\"tips-content\"></div>\n            </div>\n            <button class=\"confirm-btn\" type=\"button\" disabled>确认发送</button>\n          `;\n          container.querySelector('.card-content-wrapper')?.appendChild(tipsPanel);\n        }\n\n        // 同步 tipsContent 引用（防止重建）\n        tipsContent = tipsPanel.querySelector('.tips-content');\n\n        // 2) 解析数据并创建按钮\n        if (buttonGroup) {\n          const dataDiv = container.querySelector('.nova-options-data');\n          if (dataDiv) {\n            const rawOptionsText = dataDiv.innerHTML.replace(/<br\\s*\\/?>/gi, '\\n');\n            const optionRegex = /\\d+[\\.。、]\\s*([^\\n\\r]+)/g;\n            let match;\n            let optionIndex = 1;\n\n            while ((match = optionRegex.exec(rawOptionsText)) !== null) {\n              const optionText = (match[1] || '').trim();\n              if (optionText) {\n                const btn = document.createElement('button');\n                btn.className = 'action-btn-silent';\n                btn.setAttribute('data-action', optionText);\n                btn.textContent = `${optionIndex}. ${optionText}`;\n\n                btn.addEventListener('click', (event) => {\n                  event.preventDefault();\n                  btn.classList.toggle('active');\n                  const currentButtonGroup = btn.closest('.button-group-silent');\n                  if (currentButtonGroup) updateUI(currentButtonGroup);\n                });\n\n                buttonGroup.appendChild(btn);\n                optionIndex++;\n              }\n            }\n            dataDiv.remove();\n          }\n        }\n\n        // 3) TIPS 显示控制：如果有文本则展示标题，否则只保留操作栏\n        const tipsTitle = tipsPanel.querySelector('.tips-title');\n        const tipsHasText = tipsContent && tipsContent.textContent.trim().length > 0;\n        if (!tipsHasText && tipsTitle) tipsTitle.style.display = 'none';\n        tipsPanel.style.display = 'grid';\n\n        // 4) 初始化确认按钮（融合到 tips-panel）\n        let confirmBtn = tipsPanel.querySelector('.confirm-btn');\n        if (!confirmBtn) {\n          confirmBtn = document.createElement('button');\n          confirmBtn.className = 'confirm-btn';\n          confirmBtn.type = 'button';\n          confirmBtn.textContent = '确认发送';\n          confirmBtn.disabled = true;\n          tipsPanel.appendChild(confirmBtn);\n        }\n        confirmBtn.addEventListener('click', () => {\n          const currentButtonGroup = container.querySelector('.button-group-silent');\n          if (currentButtonGroup) sendMessage(currentButtonGroup);\n        });\n\n        // 统一更新输入框 & 按钮状态\n        const updateUI = (currentButtonGroup) => {\n          const input = getInputEl();\n          const selectedTexts = getSelectedTexts(currentButtonGroup);\n          const message = selectedTexts.join(' ');\n\n          if (input) {\n            input.value = message;\n            input.focus();\n            input.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n\n          if (confirmBtn) {\n            const hasText = (input?.value ?? message).trim().length > 0;\n            confirmBtn.disabled = !hasText;\n          }\n        };\n\n        // —— 真·文字环绕：宽屏将按钮移入 tips-content 并浮动 —— //\n        const setupResponsiveWrap = () => {\n          if (!tipsPanel || !tipsContent || !confirmBtn) return;\n\n          const apply = () => {\n            if (window.innerWidth >= 880) {\n              // 桌面：进入环绕模式\n              tipsPanel.classList.add('wrap-mode');\n              if (!tipsContent.contains(confirmBtn)) {\n                // 将按钮插入到文字块的开头，让后续文字环绕\n                tipsContent.insertAdjacentElement('afterbegin', confirmBtn);\n              }\n            } else {\n              // 移动端：恢复为吸底+居中\n              tipsPanel.classList.remove('wrap-mode');\n              if (confirmBtn.parentElement !== tipsPanel) {\n                tipsPanel.appendChild(confirmBtn);\n              }\n            }\n          };\n\n          apply();\n          let raf;\n          window.addEventListener('resize', () => {\n            cancelAnimationFrame(raf);\n            raf = requestAnimationFrame(apply);\n          });\n        };\n\n        setupResponsiveWrap();\n\n        // 首次更新\n        updateUI(buttonGroup);\n        container.classList.remove('nova-needs-init');\n      });\n    };\n  }\n  window.initializeNovaOptions();\n})();\n</script>\n</body>\n</html>\n```",
    "trimStrings": [],
    "placement": [
        2
    ],
    "disabled": false,
    "markdownOnly": true,
    "promptOnly": false,
    "runOnEdit": true,
    "substituteRegex": 0,
    "minDepth": null,
    "maxDepth": 2
}