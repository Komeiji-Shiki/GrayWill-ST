{
    "id": "64d5cd5b-3051-48f0-b8d0-2117e005fb5c",
    "scriptName": "美化选项列表2",
    "findRegex": "/<small>\\s*([^<]+?)\\s*[:：]((?:.|\\n)*?)(?:Tips\\s*[:：]\\s*([^<]+?))?\\s*<\\/small>/si",
    "replaceString": "```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\" />\n<style>\n/* 样式部分完全不变 */\n@keyframes fade-out-nova { from { opacity: 1; transform: scale(1); } to { opacity: 0; transform: scale(0.96); } }\n.nova-container.fading-out { animation: fade-out-nova 0.26s ease-out forwards; }\n:root{\n  --bg-deep: linear-gradient(180deg, #090e16 0%, #0a1220 100%);\n  --line-weak: #162339;\n  --line-strong: #223650;\n  --text-main: #d9e5ff;\n  --text-dim: #8fa0bf;\n  --btn-bg: #0e1a2d;\n  --btn-hover: #15263f;\n  --btn-active: #1a3354;\n  --btn-line: #223650;\n  --accent: #2aa8ff;\n  --notch: 10px;\n}\n.nova-silent-sky{\n  display:flex; justify-content:center; width:100%;\n  padding: 0 12px; margin: 12px auto;\n  font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n}\n.mystic-card-silent{\n  width: min(980px, 96vw);\n  background: var(--bg-deep);\n  color: var(--text-main);\n  padding: 14px;\n  border: 1px solid var(--line-weak);\n  box-shadow: 0 10px 28px rgba(0,0,0,0.55), inset 0 0 0 1px rgba(255,255,255,0.03);\n  position: relative; overflow: hidden;\n  clip-path: polygon(\n    0 var(--notch), var(--notch) 0,\n    calc(100% - var(--notch)) 0, 100% var(--notch),\n    100% calc(100% - var(--notch)), calc(100% - var(--notch)) 100%,\n    var(--notch) 100%, 0 calc(100% - var(--notch))\n  );\n}\n.mystic-card-silent::before{\n  content:\"\"; position:absolute; inset:0;\n  pointer-events:none;\n  box-shadow: inset 0 0 0 1px rgba(42,168,255,0.06);\n  clip-path: inherit;\n}\n.card-header{\n  display:flex; align-items:center; justify-content:space-between;\n  padding-bottom: 8px; margin-bottom: 10px;\n  border-bottom: 1px dashed rgba(255,255,255,0.06);\n}\n.card-title{ font-size: 13px; font-weight: 600; letter-spacing: 0.3px; }\n.card-subtle{ font-size: 11px; color: var(--text-dim); opacity: 0.85; }\n.button-group-silent{\n  display:grid; grid-template-columns: 1fr; gap: 10px;\n}\n@media (min-width: 880px){\n  .button-group-silent{ grid-template-columns: 1fr 1fr; }\n}\n.action-btn-silent{\n  text-align:left; width:100%;\n  padding: 12px 14px; font-size: 12.5px; font-weight: 500; cursor:pointer;\n  background: var(--btn-bg); color: var(--text-main);\n  border: 1px solid var(--btn-line);\n  transition: background-color .15s ease, border-color .15s ease, transform .15s ease;\n  clip-path: polygon(\n    0 var(--notch), var(--notch) 0,\n    calc(100% - var(--notch)) 0, 100% var(--notch),\n    100% calc(100% - var(--notch)), calc(100% - var(--notch)) 100%,\n    var(--notch) 100%, 0 calc(100% - var(--notch))\n  );\n}\n.action-btn-silent:hover{\n  background: var(--btn-hover);\n  border-color: var(--line-strong);\n  transform: translateY(-1px);\n}\n.action-btn-silent:active{\n  background: var(--btn-active);\n  transform: translateY(0);\n}\n.action-btn-silent:focus-visible{\n  outline: none;\n  box-shadow: 0 0 0 1px rgba(42,168,255,0.25);\n}\n.tips-panel{\n  margin-top: 12px; padding: 12px 14px;\n  background: linear-gradient(180deg, rgba(12,22,40,0.75), rgba(9,16,30,0.85));\n  border: 1px solid var(--line-weak);\n  box-shadow: inset 0 0 0 1px rgba(255,255,255,0.03);\n  clip-path: polygon(\n    0 var(--notch), var(--notch) 0,\n    calc(100% - var(--notch)) 0, 100% var(--notch),\n    100% calc(100% - var(--notch)), calc(100% - var(--notch)) 100%,\n    var(--notch) 100%, 0 calc(100% - var(--notch))\n  );\n}\n.tips-title{\n  font-size: 10.5px; color: rgba(42,168,255,0.8);\n  letter-spacing: 0.45px; margin-bottom: 6px; text-transform: uppercase;\n}\n.tips-content{ font-size: 12px; color: var(--text-dim); line-height: 1.6; }\n</style>\n</head>\n<body>\n<div class=\"nova-silent-sky nova-container nova-needs-init\">\n  <div class=\"mystic-card-silent\">\n    <div class=\"card-header\">\n      <!-- ★★★★★ 这里是唯一的HTML改动 ★★★★★ -->\n      <div class=\"card-title\">$1</div>\n      <div class=\"card-subtle\">GrayWill · Decision</div>\n    </div>\n    <div class=\"button-group-silent\"></div>\n    <div class=\"tips-panel\" style=\"display: none;\">\n      <div class=\"tips-title\">TIPS</div>\n      <div class=\"tips-content\">$3</div>\n    </div>\n    <div class=\"nova-options-data\" style=\"display:none;\">$2</div>\n  </div>\n</div>\n<script>\n// 脚本部分完全不变\n(function() {\n  if (typeof window.initializeNovaOptions === 'undefined') {\n    window.initializeNovaOptions = function() {\n      const containersToProcess = document.querySelectorAll('.nova-container.nova-needs-init');\n      containersToProcess.forEach(container => {\n        const buttonGroup = container.querySelector('.button-group-silent');\n        const dataDiv = container.querySelector('.nova-options-data');\n        const tipsPanel = container.querySelector('.tips-panel');\n        const tipsContent = container.querySelector('.tips-content');\n\n        if (buttonGroup && dataDiv) {\n          const rawOptionsText = dataDiv.innerHTML.replace(/<br\\s*\\/?>/gi, '\\n');\n          const optionRegex = /\\d+[\\.。、]\\s*([^\\n\\r]+)/g;\n          let match;\n          let optionIndex = 1;\n\n          while ((match = optionRegex.exec(rawOptionsText)) !== null) {\n            const optionText = match[1].trim();\n            if (optionText) {\n              const btn = document.createElement('button');\n              btn.className = 'action-btn-silent';\n              btn.setAttribute('data-action', optionText);\n              btn.textContent = `${optionIndex}. ${optionText}`;\n\n              btn.addEventListener('click', () => {\n                const message = btn.getAttribute('data-action');\n                if (typeof triggerSlash === 'function') {\n                  triggerSlash(`/send ${message}|/trigger`);\n                } else {\n                  console.log('triggerSlash 未定义, 模拟发送: ', message);\n                }\n                const mainContainer = btn.closest('.nova-container');\n                if (mainContainer) {\n                  mainContainer.classList.add('fading-out');\n                  setTimeout(() => { mainContainer.style.display = 'none'; }, 260);\n                }\n              });\n\n              buttonGroup.appendChild(btn);\n              optionIndex++;\n            }\n          }\n          dataDiv.remove();\n        }\n\n        if (tipsPanel && tipsContent && tipsContent.textContent.trim()) {\n          tipsPanel.style.display = 'block';\n        }\n\n        container.classList.remove('nova-needs-init');\n      });\n    };\n  }\n  \n  window.initializeNovaOptions();\n})();\n</script>\n</body>\n</html>\n```",
    "trimStrings": [],
    "placement": [
        2
    ],
    "disabled": false,
    "markdownOnly": true,
    "promptOnly": false,
    "runOnEdit": true,
    "substituteRegex": 0,
    "minDepth": null,
    "maxDepth": 2
}